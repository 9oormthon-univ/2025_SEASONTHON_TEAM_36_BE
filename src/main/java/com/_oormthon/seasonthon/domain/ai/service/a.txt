@Transactional
public TodoStepResponse breakdownTask(Long userId, GeminiReqDto requestDto) {
    try {
        // 1) 새로운 Todo 생성 (title, endDate는 Gemini 응답 기반 or 파라미터 기반으로 세팅)
        Todo todo = Todo.createTodo(userId, requestDto.getTitle(), requestDto.getEndDate());
        todoRepository.save(todo);

        // 2) Gemini 응답으로부터 step 리스트 뽑아내기
        List<TodoStep> todoSteps = requestDto.getContents().stream()
                .map(content -> TodoStep.builder()
                        .todoId(todo.getId())  // 🔥 여기서 todo_id 채워짐
                        .userId(userId)
                        .stepDate(LocalDate.now()) // 필요에 맞게 조정 (예: Gemini에서 받은 날짜)
                        .description(content.getText()) // Gemini가 뱉은 텍스트
                        .isCompleted(false)
                        .build())
                .toList();

        todoStepRepository.saveAll(todoSteps);

        // 3) Step → StepResponse 변환
        List<StepResponse> stepResponses = todoSteps.stream()
                .map(step -> StepResponse.from(todo, step))
                .toList();

        // 4) TodoStepResponse 생성
        String progressText = "개구리가 첫 걸음을 뗐어요!"; // 필요 시 동적 생성
        return TodoStepResponse.from(todo, progressText, stepResponses);

    } catch (Exception e) {
        log.error("GeminiService breakdownTask 내부 오류", e);
        throw new RuntimeException("작업 분해 실패", e);
    }
}
