name: CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set Java JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run build with Gradle Wrapper
        run: ./gradlew clean build -x test -i --no-daemon -Dspring.profiles.active=prod

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/${{secrets.DOCKER_REPO}} .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/${{secrets.DOCKER_REPO}}

  deploy:
    name: Deploy to remote EC2 Server
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

        # CD 배포
      - name: Deploy remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_IP }}
          username: ${{ secrets.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_EC2_KEY }}
          port: ${{ secrets.AWS_EC2_PORT }}
          script: |
            cd /home/ubuntu
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{secrets.DOCKER_REPO}}
            
            # 기존 컨테이너 중지 및 삭제
            if [ "$(docker ps -aq -f name=${{secrets.DOCKER_REPO}})" ]; then
              docker stop ${{secrets.DOCKER_REPO}}
              docker rm ${{secrets.DOCKER_REPO}}
            fi
            
            docker image prune -f
            
             # 새 컨테이너 실행
            docker run -d \
              --name ${{secrets.DOCKER_REPO}} \
              --env SPRING_PROFILES_ACTIVE=prod \
              --env JAVA_TOOL_OPTIONS="-Duser.timezone=Asia/Seoul" \
              --env 'MYSQL_URL=${{ secrets.MYSQL_URL }}' \
              --env MYSQL_USERNAME=${{ secrets.MYSQL_USERNAME }} \
              --env MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} \
              --env JWT_SECRET=${{ secrets.JWT_SECRET }} \
              --env KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }} \
              --env KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }} \
              --env KAKAO_CLIENT_REDIRECT_URI=${{ secrets.KAKAO_CLIENT_REDIRECT_URI }} \
              --env GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }} \
              -p 8080:8080 \
                ${{ secrets.DOCKER_USERNAME }}/${{secrets.DOCKER_REPO}}